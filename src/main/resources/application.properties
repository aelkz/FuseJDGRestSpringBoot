## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# =============================================
# spring settings
# ---------------------------------------------
# springboot application name
application.name=spring_boot_rest_soap_infinispan_oracle_blueprint
api.version=1

# camel application name
camel.springboot.name=blueprint-api
camel.component.servlet.mapping.context-path=/api/v${api.version}/*

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
management.address=0.0.0.0

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.port=8081

logging.config=classpath:logback.xml

# =============================================
# spring actuator (metrics) settings
# ---------------------------------------------
# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true

# keeps the application alive
camel.springboot.main-run-controller=true

# =============================================
# oracle settings
# ---------------------------------------------
# The oracle jdbc driver must be loaded inside
# application classpath or used with a custom
# docker image.
# Red Hat maven GA repository does't provide
# oracle drivers.
# ----------------------------------------------
spring.datasource.url=jdbc:oracle:thin:@localhost:49161:xe
spring.datasource.username=convenio
spring.datasource.password=convenio
spring.datasource.driver.class=oracle.jdbc.driver.OracleDriver
spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true

# url:      jdbc:mysql://${mysql.service.host}:${mysql.service.port}/${mysql.service.database}
# username: ${mysql.service.username}
# password: ${mysql.service.password}

# naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

# hibernate config
# allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

# drops existing tables, recreates them and executes import.sql
# Hibernate ddl auto (create, create-drop, update, validate): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=validate

# hikariCP settings
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=50

# keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1 FROM DUAL

# =============================================
# infinispan settings
# ---------------------------------------------
# The oracle jdbc driver must be loaded inside
# application classpath or used with a custom
# docker image.
# Red Hat maven GA repository does't provide
# oracle drivers.
# ----------------------------------------------

#camel.component.infinispan.configuration.hosts=localhost:11222
#infinispan.remote.server-list=127.0.0.1:11222
#infinispan.remote.client-intelligence=BASIC
#infinispan.remote.near-cache-mode=INVALIDATED
#infinispan.remote.near-cache-max-entries=100
#management.endpoints.web.exposure.include=*
#spring.cache.infinispan.config=infinispan.xml

# Infinispan service name
infinispan.service=datagrid-app-hotrod
jdg.service.name=DATAGRID_APP_HOTROD

# Change the following variables for testing purposes when running the app from the workstation machine.
# They are overridden when the application is running in kubernetes/openshift
# (whenever a service named 'datagrid-app-hotrod' is present in the project/namespace).
# JDG xPaaS images use port 11333 by default.
DATAGRID_APP_HOTROD_SERVICE_HOST=127.0.0.1
DATAGRID_APP_HOTROD_SERVICE_PORT=11322
DATAGRID_APP_HOTROD_SERVICE_RETRIES=10

# Infinispan cache to use
infinispan.cache-name=default
